[package]
name = "websocket-proxy"
version = "0.0.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "websocket_proxy"
path = "src/lib.rs"
required-features = ["server"]

[features]
default = ["cloudflare"]

cloudflare = ["cfg-if", "worker", "serde", "tokio/io-util"]
server = ["axum", "headers", "tokio/full", "tower-http", "tracing", "tracing-subscriber", "bytes", "bitcoin_hashes"]

[dependencies]
# Common dependency
tokio = { version = "^1.0", features = [], optional = true }
futures = { version = "0.3.28" }
async-trait = "0.1.68"

# Cloudflare
cfg-if = { version = "0.1.2", optional = true }
# TODO move to main branch once this merges in
#worker = {  version = "0.0.13", features = ["queue"] }
worker = {  git = "https://github.com/kflansburg/workers-rs.git", rev = "e05d615ba53896faa9f7ecf3db84715d472d1319", optional = true }
serde = { version = "^1.0", features = ["derive"], optional = true }

# Normal Binary Server
axum = { version ="0.6.15", features = ["ws", "headers"], optional = true }
headers = { version = "0.3.8", optional = true }
tower-http = { version = "0.4.0", features = ["fs", "trace"], optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3.17", features = ["env-filter"], optional = true }
bytes = { version = "1.3.0", optional = true }
bitcoin_hashes = { version = "0.11", default-features = true, optional = true }


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
